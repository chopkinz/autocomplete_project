file <- 'fourletterwords.txt'
df <- read.csv2(file, header=T, sep='\t')
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwords.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches) - fourletterwords.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwords.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches) - fourletterwords.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwords.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches) - fourletterwords.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('black', 'orange', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches) - fourletterwordshalf.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('blue', 'yellow', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('blue', 'yellow', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches) - fourletterwordshalf.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('blue', 'yellow', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('blue', 'yellow', 'red')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches) - fourletterwordshalf.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('white', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('white', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwordshalf.txt') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('white', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('white', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwordshalf.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('grey', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('grey', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwordshalf.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('green', 'black', 'pink')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('grey', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwords.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('green', 'black', 'pink')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('grey', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwords.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwords.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('green', 'black', 'pink')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('grey', 'orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwords.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('green', 'black', 'pink')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('green', 'black', 'pink')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwords.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('red', 'blue', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('red', 'blue', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch) - fourletterwordshalf.txt') +
theme_light() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('blue', 'red', 'white')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=null, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=null, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatch)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('orange', 'blue')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Brute, Binary, Trie)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('red', 'blue', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('red', 'blue', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Time", Pseudocode, Implementation)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
df.topMatch <- df %>% filter(k_matches == "")
df.topMatch <- df.topMatch %>% mutate(prefix_length = str_length(word))
df.topMatches <- df.topMatches %>% mutate(prefix_length = str_length(word))
ggplot(df.topMatch, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('red', 'blue', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time (topMatches)') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
ggplot(df.topMatches, aes(x=Time, y=Prefix, fill=Implementation)) +
scale_fill_manual(values=c('red', 'blue', 'green')) +
geom_bar(stat='identity', position=position_dodge()) +
labs(title='Prefix vs. Time for topMatches') +
theme_dark() +
theme(plot.title=element_text(hjust=0.5))
library(ggplot2)
library(dplyr)
library(readr)
library(tidyr)
library(stringr)
library(readxl)
library(tidyr)
library(dplyr)
path <- '/Users/Chase/Documents/Fall 2021/Coursework/COMP-3270/project-ceh0136/code/autocomplete-start/src'
setwd(path)
file <- 'Benchmark_out.txt'
df <- read.csv2(file, header=T, sep='\t')
df <- distinct(df)
df <- gather(df, "Implementation", "Time", Pseudocode, Implemen)
df$Time <- as.numeric(df$Time)
df$file_name <- 'fourletterwordshalf.txt'
full.prefix.split <- str_split_fixed(unlist(df$Prefix), pattern='_', n=2)
df$word <- full.prefix.split[,1]
df$k_matches <- full.prefix.split[,2]
df.topMatches <- df %>% filter(k_matches != "")
